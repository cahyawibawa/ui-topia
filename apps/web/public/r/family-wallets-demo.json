{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "family-wallets-demo",
  "type": "registry:component",
  "title": "Family Wallets",
  "description": "An interactive interaction from Family wallets interface featuring smooth layout transitions and animations. Each wallet card can expand to show additional details and controls while collapsing others into a compact view.",
  "dependencies": [
    "lucide-react",
    "motion",
    "react",
    "usehooks-ts"
  ],
  "registryDependencies": [
    "https://uitopia.xyz/r/icons.json"
  ],
  "files": [
    {
      "path": "registry/components/family-wallets-demo.tsx",
      "content": "\"use client\";\n\nimport { Icons } from \"@/registry/components/icons\";\nimport { AnimatePresence, MotionConfig, motion } from \"motion/react\";\nimport {\n  type FC,\n  type JSX,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport type { RefObject } from \"react\";\nimport { useOnClickOutside } from \"usehooks-ts\";\n\n// Types\ninterface WalletCardProps {\n  bgColor: string;\n  IconComponent: (props: React.HTMLAttributes<SVGElement>) => JSX.Element;\n  walletName: string;\n  ethValue: string;\n  onClick?: () => void;\n  uniqueId: string;\n}\n\n// Shared animation variants\nconst iconAnimation = {\n  initial: { opacity: 0, scale: 0.5, filter: \"blur(4px)\" },\n  animate: { opacity: 1, scale: 1, filter: \"blur(0px)\" },\n  exit: { opacity: 0, scale: 0.5, filter: \"blur(4px)\" },\n};\n\nconst buttonAnimation = {\n  initial: { opacity: 0, scale: 0.25, filter: \"blur(4px)\" },\n  animate: { opacity: 1, scale: 1, filter: \"blur(0px)\" },\n  exit: { opacity: 0, scale: 0.25, filter: \"blur(4px)\" },\n};\n\n// Shared styled components\nconst BaseWalletCard = motion.div;\nconst IconWrapper = motion.div;\nconst TextWrapper = motion.span;\n\n// Component implementations\nexport const WalletCardDefault: FC<WalletCardProps> = ({\n  bgColor,\n  IconComponent,\n  walletName,\n  ethValue,\n  onClick,\n  uniqueId,\n}) => (\n  <BaseWalletCard\n    layoutId={`wallet-${uniqueId}`}\n    className=\"flex flex-col items-start justify-between p-3\"\n    style={{\n      height: \"120px\",\n      width: \"160px\",\n      borderRadius: 24,\n      backgroundColor: bgColor,\n    }}\n  >\n    <div className=\"flex w-full items-start justify-between\">\n      <IconWrapper\n        layoutId={`icon-${uniqueId}`}\n        className=\"flex items-center justify-center\"\n      >\n        <IconComponent className=\"h-10 w-10 translate-x-0 translate-y-0 fill-white\" />\n      </IconWrapper>\n      <motion.div\n        {...iconAnimation}\n        className=\"flex h-6 w-6 shrink-0 cursor-pointer items-center justify-center rounded-full bg-white/20 transition-colors duration-150 ease-out hover:bg-white/30\"\n        onClick={onClick}\n      >\n        <Icons.moreIcon className=\"shrink-0 translate-x-0 translate-y-0 fill-white\" />\n      </motion.div>\n    </div>\n    <div className=\"flex flex-col items-start justify-center\">\n      <TextWrapper\n        layoutId={`walletName-${uniqueId}`}\n        className=\"select-none font-semibold text-base text-white\"\n      >\n        {walletName}\n      </TextWrapper>\n      <TextWrapper\n        layoutId={`ethValue-${uniqueId}`}\n        className=\"select-none font-semibold text-sm text-white/50\"\n      >\n        {ethValue}\n      </TextWrapper>\n    </div>\n  </BaseWalletCard>\n);\n\nexport const WalletCardExpanded: FC<WalletCardProps> = ({\n  bgColor,\n  IconComponent,\n  walletName,\n  ethValue,\n  onClick,\n  uniqueId,\n}) => (\n  <BaseWalletCard\n    layoutId={`wallet-${uniqueId}`}\n    className=\"flex cursor-pointer flex-col items-start justify-between p-5\"\n    style={{\n      height: \"200px\",\n      width: \"320px\",\n      borderRadius: 24,\n      backgroundColor: bgColor,\n    }}\n  >\n    <motion.div className=\"flex w-full items-start justify-between\">\n      <IconWrapper\n        layoutId={`icon-${uniqueId}`}\n        className=\"flex items-center justify-center\"\n        onClick={onClick}\n      >\n        <IconComponent className=\"h-14 w-14 translate-x-0 translate-y-0 fill-white\" />\n      </IconWrapper>\n      <motion.div\n        {...iconAnimation}\n        className=\"flex h-[24px] shrink-0 translate-x-0 translate-y-0 cursor-pointer select-none items-center justify-center gap-x-[6px] font-semibold text-white\"\n        whileTap={{ scale: 0.9 }}\n      >\n        Copy Address\n        <motion.div className=\"flex h-6 w-6 shrink-0 cursor-pointer items-center justify-center\">\n          <Icons.copyIcon className=\"h-5 w-5 shrink-0 translate-x-0 translate-y-0 stroke-white/50\" />\n        </motion.div>\n      </motion.div>\n    </motion.div>\n    <div className=\"flex w-full items-end justify-between\">\n      <div className=\"flex flex-col items-start justify-center\">\n        <TextWrapper\n          layoutId={`walletName-${uniqueId}`}\n          className=\"select-none font-semibold text-white text-xl\"\n        >\n          {walletName}\n        </TextWrapper>\n        <TextWrapper\n          layoutId={`ethValue-${uniqueId}`}\n          className=\"select-none font-semibold text-lg text-white/50\"\n        >\n          {ethValue}\n        </TextWrapper>\n      </div>\n      <motion.button\n        {...buttonAnimation}\n        className=\"flex h-[32px] select-none items-center justify-center rounded-full bg-white/20 p-2 px-3 font-semibold text-white transition-colors duration-150 ease-out hover:bg-white/15\"\n      >\n        Customize\n      </motion.button>\n    </div>\n  </BaseWalletCard>\n);\n\nexport const WalletCardCollapsed: FC<WalletCardProps> = ({\n  bgColor,\n  IconComponent,\n  walletName,\n  ethValue,\n  onClick,\n  uniqueId,\n}) => (\n  <BaseWalletCard\n    layoutId={`wallet-${uniqueId}`}\n    onClick={onClick}\n    className=\"flex cursor-pointer flex-col items-start justify-between p-3\"\n    style={{\n      height: \"96px\",\n      width: \"96px\",\n      borderRadius: 20,\n      backgroundColor: bgColor,\n    }}\n  >\n    <div className=\"flex w-full items-center justify-start\">\n      <IconWrapper\n        layoutId={`icon-${uniqueId}`}\n        className=\"flex items-center justify-center\"\n      >\n        <IconComponent className=\"h-8 w-8 translate-x-0 translate-y-0 fill-white\" />\n      </IconWrapper>\n    </div>\n    <div className=\"flex flex-col items-start justify-center\">\n      <TextWrapper\n        layoutId={`walletName-${uniqueId}`}\n        className=\"select-none font-semibold text-sm text-white\"\n      >\n        {walletName}\n      </TextWrapper>\n      <TextWrapper\n        layoutId={`ethValue-${uniqueId}`}\n        className=\"select-none font-semibold text-white/50 text-xs\"\n      >\n        {ethValue}\n      </TextWrapper>\n    </div>\n  </BaseWalletCard>\n);\n\n// Wallet data\nconst walletData = [\n  {\n    id: \"1\",\n    bgColor: \"#9E4EFD\",\n    IconComponent: Icons.sparklesIcon,\n    walletName: \"Family\",\n    ethValue: \"1.03 ETH\",\n  },\n  {\n    id: \"2\",\n    bgColor: \"#191A1A\",\n    IconComponent: Icons.percentIcon,\n    walletName: \"Savings\",\n    ethValue: \"25.08 ETH\",\n  },\n  {\n    id: \"3\",\n    bgColor: \"#06BDC8\",\n    IconComponent: Icons.cloudIcon,\n    walletName: \"Rainy Day\",\n    ethValue: \"0.04 ETH\",\n  },\n  {\n    id: \"4\",\n    bgColor: \"#00B2FB\",\n    IconComponent: Icons.receiptIcon,\n    walletName: \"Spending\",\n    ethValue: \"0 ETH\",\n  },\n];\n\nconst FamilyWallets = () => {\n  const [expandedCardId, setExpandedCardId] = useState<string | null>(null);\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleToggle = useCallback((uniqueId: string) => {\n    setExpandedCardId((prev) => (prev === uniqueId ? null : uniqueId));\n  }, []);\n\n  useOnClickOutside(ref as RefObject<HTMLElement>, () =>\n    setExpandedCardId(null),\n  );\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setExpandedCardId(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const renderExpandedWallet = (id: string) => {\n    const wallet = walletData.find((w) => w.id === id);\n    if (!wallet) return null;\n\n    return (\n      <>\n        <div style={{ height: 200 }} className=\"flex gap-4\">\n          <WalletCardExpanded\n            {...wallet}\n            onClick={() => handleToggle(id)}\n            uniqueId={id}\n          />\n        </div>\n        <div className=\"flex gap-4\" style={{ width: 320, height: 96 }}>\n          {walletData\n            .filter((w) => w.id !== id)\n            .map((wallet) => (\n              <WalletCardCollapsed\n                key={wallet.id}\n                {...wallet}\n                onClick={() => handleToggle(\"\")}\n                uniqueId={wallet.id}\n              />\n            ))}\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <MotionConfig transition={{ type: \"spring\", duration: 0.4, bounce: 0.1 }}>\n      <div className=\"flex items-center justify-center\">\n        <div ref={ref}>\n          <AnimatePresence mode=\"popLayout\" initial={false}>\n            {expandedCardId ? (\n              <motion.div\n                key=\"expanded\"\n                className=\"flex flex-col items-center justify-center gap-4\"\n              >\n                {renderExpandedWallet(expandedCardId)}\n              </motion.div>\n            ) : (\n              <motion.div\n                key=\"collapsed\"\n                className=\"flex flex-col items-center justify-center gap-4\"\n              >\n                {[0, 1].map((row) => (\n                  <div key={row} className=\"flex gap-4\">\n                    {walletData.slice(row * 2, (row + 1) * 2).map((wallet) => (\n                      <WalletCardDefault\n                        key={wallet.id}\n                        {...wallet}\n                        onClick={() => handleToggle(wallet.id)}\n                        uniqueId={wallet.id}\n                      />\n                    ))}\n                  </div>\n                ))}\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n    </MotionConfig>\n  );\n};\n\nexport default FamilyWallets;\n",
      "type": "registry:component",
      "target": "components/family-wallets-demo.tsx"
    }
  ],
  "categories": [
    "motion",
    "react",
    "tailwindcss"
  ]
}