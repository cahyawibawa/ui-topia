{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "family-wallets-demo",
  "type": "registry:component",
  "description": "An interactive wallet management interface featuring smooth layout transitions and animations. Each wallet card can expand to show additional details and controls while collapsing others into a compact view, creating a fluid and engaging user experience.",
  "registryDependencies": ["motion", "react"],
  "files": [
    {
      "path": "registry/showcases/family-wallets-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { Icons } from \"@/uitopia/icons\";\r\nimport { AnimatePresence, MotionConfig, motion } from \"motion/react\";\r\nimport { type FC, JSX, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\n\r\n// Types\r\ninterface WalletCardProps {\r\n  bgColor: string;\r\n  IconComponent: (props: React.HTMLAttributes<SVGElement>) => JSX.Element;\r\n  walletName: string;\r\n  ethValue: string;\r\n  onClick?: () => void;\r\n  uniqueId: string;\r\n}\r\n\r\n// Shared animation variants\r\nconst iconAnimation = {\r\n  initial: { opacity: 0, scale: 0.5, filter: \"blur(4px)\" },\r\n  animate: { opacity: 1, scale: 1, filter: \"blur(0px)\" },\r\n  exit: { opacity: 0, scale: 0.5, filter: \"blur(4px)\" },\r\n};\r\n\r\nconst buttonAnimation = {\r\n  initial: { opacity: 0, scale: 0.25, filter: \"blur(4px)\" },\r\n  animate: { opacity: 1, scale: 1, filter: \"blur(0px)\" },\r\n  exit: { opacity: 0, scale: 0.25, filter: \"blur(4px)\" },\r\n};\r\n\r\n// Shared styled components\r\nconst BaseWalletCard = motion.div;\r\nconst IconWrapper = motion.div;\r\nconst TextWrapper = motion.span;\r\n\r\n// Component implementations\r\nexport const WalletCardDefault: FC<WalletCardProps> = ({\r\n  bgColor,\r\n  IconComponent,\r\n  walletName,\r\n  ethValue,\r\n  onClick,\r\n  uniqueId,\r\n}) => (\r\n  <BaseWalletCard\r\n    layoutId={`wallet-${uniqueId}`}\r\n    className=\"flex flex-col items-start justify-between p-3\"\r\n    style={{\r\n      height: \"120px\",\r\n      width: \"160px\",\r\n      borderRadius: 24,\r\n      backgroundColor: bgColor,\r\n    }}\r\n  >\r\n    <div className=\"flex w-full items-start justify-between\">\r\n      <IconWrapper\r\n        layoutId={`icon-${uniqueId}`}\r\n        className=\"flex items-center justify-center\"\r\n      >\r\n        <IconComponent className=\"h-10 w-10 translate-x-0 translate-y-0 fill-white\" />\r\n      </IconWrapper>\r\n      <motion.div\r\n        {...iconAnimation}\r\n        className=\"flex h-6 w-6 shrink-0 cursor-pointer items-center justify-center rounded-full bg-white/20 transition-colors duration-150 ease-out hover:bg-white/30\"\r\n        onClick={onClick}\r\n      >\r\n        <Icons.moreIcon className=\"shrink-0 translate-x-0 translate-y-0 fill-white\" />\r\n      </motion.div>\r\n    </div>\r\n    <div className=\"flex flex-col items-start justify-center\">\r\n      <TextWrapper\r\n        layoutId={`walletName-${uniqueId}`}\r\n        className=\"select-none font-semibold text-base text-white\"\r\n      >\r\n        {walletName}\r\n      </TextWrapper>\r\n      <TextWrapper\r\n        layoutId={`ethValue-${uniqueId}`}\r\n        className=\"select-none font-semibold text-sm text-white/50\"\r\n      >\r\n        {ethValue}\r\n      </TextWrapper>\r\n    </div>\r\n  </BaseWalletCard>\r\n);\r\n\r\nexport const WalletCardExpanded: FC<WalletCardProps> = ({\r\n  bgColor,\r\n  IconComponent,\r\n  walletName,\r\n  ethValue,\r\n  onClick,\r\n  uniqueId,\r\n}) => (\r\n  <BaseWalletCard\r\n    layoutId={`wallet-${uniqueId}`}\r\n    className=\"flex cursor-pointer flex-col items-start justify-between p-5\"\r\n    style={{\r\n      height: \"200px\",\r\n      width: \"320px\",\r\n      borderRadius: 24,\r\n      backgroundColor: bgColor,\r\n    }}\r\n  >\r\n    <motion.div className=\"flex w-full items-start justify-between\">\r\n      <IconWrapper\r\n        layoutId={`icon-${uniqueId}`}\r\n        className=\"flex items-center justify-center\"\r\n        onClick={onClick}\r\n      >\r\n        <IconComponent className=\"h-14 w-14 translate-x-0 translate-y-0 fill-white\" />\r\n      </IconWrapper>\r\n      <motion.div\r\n        {...iconAnimation}\r\n        className=\"flex h-[24px] shrink-0 translate-x-0 translate-y-0 cursor-pointer select-none items-center justify-center gap-x-[6px] font-semibold text-white\"\r\n        whileTap={{ scale: 0.9 }}\r\n      >\r\n        Copy Address\r\n        <motion.div className=\"flex h-6 w-6 shrink-0 cursor-pointer items-center justify-center\">\r\n          <Icons.copyIcon className=\"h-5 w-5 shrink-0 translate-x-0 translate-y-0 stroke-white/50\" />\r\n        </motion.div>\r\n      </motion.div>\r\n    </motion.div>\r\n    <div className=\"flex w-full items-end justify-between\">\r\n      <div className=\"flex flex-col items-start justify-center\">\r\n        <TextWrapper\r\n          layoutId={`walletName-${uniqueId}`}\r\n          className=\"select-none font-semibold text-white text-xl\"\r\n        >\r\n          {walletName}\r\n        </TextWrapper>\r\n        <TextWrapper\r\n          layoutId={`ethValue-${uniqueId}`}\r\n          className=\"select-none font-semibold text-lg text-white/50\"\r\n        >\r\n          {ethValue}\r\n        </TextWrapper>\r\n      </div>\r\n      <motion.button\r\n        {...buttonAnimation}\r\n        className=\"flex h-[32px] select-none items-center justify-center rounded-full bg-white/20 p-2 px-3 font-semibold text-white transition-colors duration-150 ease-out hover:bg-white/15\"\r\n      >\r\n        Customize\r\n      </motion.button>\r\n    </div>\r\n  </BaseWalletCard>\r\n);\r\n\r\nexport const WalletCardCollapsed: FC<WalletCardProps> = ({\r\n  bgColor,\r\n  IconComponent,\r\n  walletName,\r\n  ethValue,\r\n  onClick,\r\n  uniqueId,\r\n}) => (\r\n  <BaseWalletCard\r\n    layoutId={`wallet-${uniqueId}`}\r\n    onClick={onClick}\r\n    className=\"flex cursor-pointer flex-col items-start justify-between p-3\"\r\n    style={{\r\n      height: \"96px\",\r\n      width: \"96px\",\r\n      borderRadius: 20,\r\n      backgroundColor: bgColor,\r\n    }}\r\n  >\r\n    <div className=\"flex w-full items-center justify-start\">\r\n      <IconWrapper\r\n        layoutId={`icon-${uniqueId}`}\r\n        className=\"flex items-center justify-center\"\r\n      >\r\n        <IconComponent className=\"h-8 w-8 translate-x-0 translate-y-0 fill-white\" />\r\n      </IconWrapper>\r\n    </div>\r\n    <div className=\"flex flex-col items-start justify-center\">\r\n      <TextWrapper\r\n        layoutId={`walletName-${uniqueId}`}\r\n        className=\"select-none font-semibold text-sm text-white\"\r\n      >\r\n        {walletName}\r\n      </TextWrapper>\r\n      <TextWrapper\r\n        layoutId={`ethValue-${uniqueId}`}\r\n        className=\"select-none font-semibold text-white/50 text-xs\"\r\n      >\r\n        {ethValue}\r\n      </TextWrapper>\r\n    </div>\r\n  </BaseWalletCard>\r\n);\r\n\r\n// Wallet data\r\nconst walletData = [\r\n  {\r\n    id: \"1\",\r\n    bgColor: \"#9E4EFD\",\r\n    IconComponent: Icons.sparklesIcon,\r\n    walletName: \"Family\",\r\n    ethValue: \"1.03 ETH\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    bgColor: \"#191A1A\",\r\n    IconComponent: Icons.percentIcon,\r\n    walletName: \"Savings\",\r\n    ethValue: \"25.08 ETH\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    bgColor: \"#06BDC8\",\r\n    IconComponent: Icons.cloudIcon,\r\n    walletName: \"Rainy Day\",\r\n    ethValue: \"0.04 ETH\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    bgColor: \"#00B2FB\",\r\n    IconComponent: Icons.receiptIcon,\r\n    walletName: \"Spending\",\r\n    ethValue: \"0 ETH\",\r\n  },\r\n];\r\n\r\nconst FamilyWallets = () => {\r\n  const [expandedCardId, setExpandedCardId] = useState<string | null>(null);\r\n  const ref = useRef(null);\r\n\r\n  const handleToggle = useCallback((uniqueId: string) => {\r\n    setExpandedCardId(prev => prev === uniqueId ? null : uniqueId);\r\n  }, []);\r\n\r\n  useOnClickOutside(ref, () => setExpandedCardId(null));\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\") {\r\n        setExpandedCardId(null);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, []);\r\n\r\n  const renderExpandedWallet = (id: string) => {\r\n    const wallet = walletData.find(w => w.id === id);\r\n    if (!wallet) return null;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ height: 200 }} className=\"flex gap-4\">\r\n          <WalletCardExpanded\r\n            {...wallet}\r\n            onClick={() => handleToggle(id)}\r\n            uniqueId={id}\r\n          />\r\n        </div>\r\n        <div className=\"flex gap-4\" style={{ width: 320, height: 96 }}>\r\n          {walletData\r\n            .filter(w => w.id !== id)\r\n            .map(wallet => (\r\n              <WalletCardCollapsed\r\n                key={wallet.id}\r\n                {...wallet}\r\n                onClick={() => handleToggle(\"\")}\r\n                uniqueId={wallet.id}\r\n              />\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MotionConfig transition={{ type: \"spring\", duration: 0.4, bounce: 0.1 }}>\r\n      <div className=\"flex items-center justify-center\">\r\n        <div ref={ref}>\r\n          <AnimatePresence mode=\"popLayout\" initial={false}>\r\n            {expandedCardId ? (\r\n              <motion.div\r\n                key=\"expanded\"\r\n                className=\"flex flex-col items-center justify-center gap-4\"\r\n              >\r\n                {renderExpandedWallet(expandedCardId)}\r\n              </motion.div>\r\n            ) : (\r\n              <motion.div\r\n                key=\"collapsed\"\r\n                className=\"flex flex-col items-center justify-center gap-4\"\r\n              >\r\n                {[0, 1].map(row => (\r\n                  <div key={row} className=\"flex gap-4\">\r\n                    {walletData.slice(row * 2, (row + 1) * 2).map(wallet => (\r\n                      <WalletCardDefault\r\n                        key={wallet.id}\r\n                        {...wallet}\r\n                        onClick={() => handleToggle(wallet.id)}\r\n                        uniqueId={wallet.id}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </MotionConfig>\r\n  );\r\n};\r\n\r\nexport default FamilyWallets;\r\n",
      "type": "registry:component"
    }
  ],
  "categories": ["motion", "react"]
}
