{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-primary",
  "type": "registry:component",
  "description": "custom shadcn/ui button.",
  "title": "Button Primary",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "react",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://uitopia.xyz/r/button.json",
    "https://uitopia.xyz/r/stack.json"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/button-primary.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Stack } from \"@/components/ui/stack\";\n\nexport default function ButtonPrimary() {\n  return (\n    <Stack\n      align=\"start\"\n      direction={{ sm: \"column\", md: \"row\" }}\n      gap={4}\n      justify=\"space-between\"\n    >\n      <Button className=\"border border-primary bg-linear-to-b from-primary/80 to-primary text-primary-foreground text-sm shadow-md shadow-zinc-950/30 ring ring-white/20 ring-inset transition-[filter] duration-200 hover:brightness-125 active:brightness-95 dark:border-primary dark:from-primary dark:to-primary/80 **:[text-shadow:0_1px_0_var(--color-primary)]\">\n        Primary\n      </Button>\n\n      <Button className=\"inset-shadow-2xs inset-shadow-white/25 border border-primary bg-radial-[at_52%_-52%] from-primary/70 to-primary/95 text-primary-foreground text-sm shadow-md shadow-zinc-950/30 ring-0 transition-[filter] duration-200 hover:brightness-125 active:brightness-95 dark:inset-shadow-white dark:border-0 dark:from-primary dark:to-primary/70 dark:hover:to-primary **:[text-shadow:0_1px_0_var(--color-primary)]\">\n        <span className=\"relative [text-shadow:0_1px_0_var(--color-zinc-950)] dark:[text-shadow:0_1px_0_var(--color-white)]\">\n          Primary\n        </span>\n      </Button>\n\n      <Button className=\"border border-primary border-b-2 bg-primary/75 text-primary-foreground shadow-md shadow-zinc-950/20 ring ring-white/15 ring-inset transition-[filter,scale,background] duration-200 hover:bg-primary/85 hover:brightness-110 active:scale-98 dark:border-primary dark:bg-primary/90 dark:ring-transparent dark:hover:bg-primary\">\n        <span className=\"relative [--shadow-color:var(--color-zinc-950)] [text-shadow:0_1px_0_var(--shadow-color)] dark:[--shadow-color:var(--color-white)]\">\n          Primary\n        </span>\n      </Button>\n    </Stack>\n  );\n}\n",
      "path": "registry/components/button-primary.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90 ring-1 ring-inset ring-white/20 ring-offset-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "registry/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/stack.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype Direction = \"row\" | \"column\";\ntype ResponsiveDirection = {\n  sm?: Direction;\n  md?: Direction;\n};\n\ntype StackProps = React.PropsWithChildren<{\n  direction?: ResponsiveDirection;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\";\n  justify?: \"start\" | \"center\" | \"end\" | \"space-between\" | \"space-around\";\n  className?: string;\n}>;\n\nexport function Stack({\n  direction = { sm: \"column\", md: \"row\" },\n  gap = 4,\n  align = \"start\",\n  justify = \"start\",\n  children,\n  className,\n}: StackProps) {\n  // Map justify value to appropriate Tailwind class\n  const justifyClass = justify.includes(\"space-\")\n    ? `justify-${justify.replace(\"space-\", \"\")}`\n    : `justify-${justify}`;\n\n  return (\n    <div\n      className={cn(\n        \"flex\",\n        direction.sm === \"row\" ? \"flex-row\" : \"flex-col\",\n        direction.md === \"row\" ? \"md:flex-row\" : \"md:flex-col\",\n        \"gap-2 md:gap-5 lg:gap-10 xl:gap-[60px]\",\n        `items-${align}`,\n        justifyClass,\n        className,\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n",
      "path": "registry/ui/stack.tsx"
    }
  ]
}
