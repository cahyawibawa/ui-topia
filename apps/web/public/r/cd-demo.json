{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cd-demo",
  "type": "registry:component",
  "title": "CD Demo",
  "description": "CD demo component.",
  "dependencies": [
    "@number-flow/react",
    "motion",
    "react"
  ],
  "files": [
    {
      "path": "registry/components/cd-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport NumberFlow from '@number-flow/react'\r\nimport { MotionConfig, type Transition, motion } from \"motion/react\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\n\r\nconst Context = React.createContext<{\r\n  status: string;\r\n  setStatus: React.Dispatch<React.SetStateAction<string>>;\r\n}>({ status: \"\", setStatus: () => null });\r\n\r\nconst transition: Transition = { type: \"spring\", bounce: 0, duration: 0.4 };\r\n\r\nfunction CD() {\r\n  const ctx = React.useContext(Context);\r\n  const isPressed = ctx.status === \"pressed\";\r\n  const [active, setActive] = React.useState(false);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ rotate: 0, x: \"-50%\", y: -108, borderRadius: 110 }}\r\n      animate={\r\n        isPressed\r\n          ? {\r\n            y: -108,\r\n            transition: { ...transition, duration: 1.2 },\r\n          }\r\n          : active\r\n            ? {\r\n              rotate: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              y: 0,\r\n              borderRadius: 0,\r\n              border: 0,\r\n              transition: { ...transition, duration: 1.2 },\r\n            }\r\n            : {\r\n              rotate: 360,\r\n              y: -108,\r\n              transition: {\r\n                ease: \"linear\",\r\n                duration: 5,\r\n                repeat: Number.POSITIVE_INFINITY,\r\n              },\r\n            }\r\n      }\r\n      whileHover={{\r\n        scale: 1.03,\r\n      }}\r\n      onTapStart={() => {\r\n        ctx.setStatus(\"pressed\");\r\n      }}\r\n      onTap={() => {\r\n        setActive((prev) => !prev);\r\n        ctx.setStatus(\"idle\");\r\n      }}\r\n      onTapCancel={() => {\r\n        setActive(false);\r\n        ctx.setStatus(\"idle\");\r\n      }}\r\n      className=\"absolute left-1/2 z-10 flex size-[220px] origin-center select-none items-center justify-center overflow-hidden border border-[#a89f9f] bg-gray-400 shadow-[0_0_60px_-10px_rgba(0,0,0,0.6)]\"\r\n    >\r\n      <Image\r\n        src=\"/images/currents-evangelion.jpg\"\r\n        alt=\"currents album\"\r\n        className=\"pointer-events-none select-none object-cover\"\r\n        width={220}\r\n        height={220}\r\n      />\r\n      <motion.div\r\n        animate={active ? { opacity: 0 } : {}}\r\n        className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 flex items-center justify-center\"\r\n      >\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[66px] rounded-full bg-gray-500/20 backdrop-blur-sm\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[62px] rounded-full border-[2.5px] border-gray-200/10 border-dotted\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[55px] rounded-full border border-white bg-[#9799a5]\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[37px] rounded-full bg-[#c9c2c7]\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[30px] rounded-full bg-[#c9c2c7]\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[28px] rounded-full bg-[#e3dee4]\" />\r\n        <div className=\"-translate-x-1/2 -translate-y-1/2 absolute top-1/2 left-1/2 size-[24px] rounded-full border border-[#a6a4a5] bg-[#bebcba] shadow-[0_0_8px_-4px_rgba(0,0,0,0.25)_inset]\" />\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default function CDPlayer() {\r\n  const [status, setStatus] = React.useState(\"idle\");\r\n  const [time, setTime] = React.useState(10);\r\n  const isNotIdle = status !== \"idle\";\r\n\r\n  React.useEffect(() => {\r\n    function handleEscape(e: KeyboardEvent) {\r\n      if (e.key === \"Escape\") {\r\n        setStatus(\"idle\");\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", handleEscape);\r\n    return () => window.removeEventListener(\"keydown\", handleEscape);\r\n  }, [setStatus]);\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => setTime((prev) => prev + 1), 1000);\r\n    return () => clearInterval(interval);\r\n  }, [setTime]);\r\n\r\n  return (\r\n    <Context.Provider value={{ status, setStatus }}>\r\n      <MotionConfig transition={transition}>\r\n        <div className=\"relative size-[220px] overflow-hidden rounded-2xl border border-[#cacaca] bg-[#e3e3e3] font-medium tracking-tight shadow-[0_2px_6px_-1.5px_rgba(0,0,0,0.06)]\">\r\n          <CD />\r\n          <motion.div\r\n            animate={isNotIdle ? { scale: 0.95, filter: \"blur(2px)\" } : {}}\r\n            className=\"absolute bottom-4 flex w-full flex-col items-center gap-2\"\r\n          >\r\n            <div className=\"relative flex h-4 w-fit items-center justify-center gap-0.5\">\r\n              <motion.div\r\n                initial={{ height: 8 }}\r\n                animate={{\r\n                  height: 2,\r\n                  transition: {\r\n                    repeat: Number.POSITIVE_INFINITY,\r\n                    repeatType: \"reverse\",\r\n                    duration: 1,\r\n                    type: \"linear\",\r\n                  },\r\n                }}\r\n                className=\"h-4 w-0.5 rounded-full bg-[#999592]\"\r\n              />\r\n              <motion.div\r\n                initial={{ height: 2 }}\r\n                animate={{\r\n                  height: 14,\r\n                  transition: {\r\n                    repeat: Number.POSITIVE_INFINITY,\r\n                    repeatType: \"reverse\",\r\n                    duration: 1.5,\r\n                    type: \"linear\",\r\n                  },\r\n                }}\r\n                className=\"h-4 w-0.5 rounded-full bg-[#999592]\"\r\n              />\r\n              <motion.div\r\n                initial={{ height: 5 }}\r\n                animate={{\r\n                  height: 2,\r\n                  transition: {\r\n                    repeat: Number.POSITIVE_INFINITY,\r\n                    repeatType: \"reverse\",\r\n                    duration: 0.8,\r\n                    type: \"linear\",\r\n                  },\r\n                }}\r\n                className=\"h-2 w-0.5 rounded-full bg-[#999592]\"\r\n              />\r\n              <motion.div\r\n                initial={{ height: 2 }}\r\n                animate={{\r\n                  height: 10,\r\n                  transition: {\r\n                    repeat: Number.POSITIVE_INFINITY,\r\n                    repeatType: \"reverse\",\r\n                    duration: 1.8,\r\n                    type: \"linear\",\r\n                  },\r\n                }}\r\n                className=\"h-3 w-0.5 rounded-full bg-[#999592]\"\r\n              />\r\n              <motion.div\r\n                initial={{ height: 3 }}\r\n                animate={{\r\n                  height: 2,\r\n                  transition: {\r\n                    repeat: Number.POSITIVE_INFINITY,\r\n                    repeatType: \"reverse\",\r\n                    duration: 0.6,\r\n                    type: \"linear\",\r\n                  },\r\n                }}\r\n                className=\"h-1 w-0.5 rounded-full bg-[#999592]\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col items-center gap-1 text-xs\">\r\n              <p className=\"text-[#a09c99]\">Tame Impala</p>\r\n              <p className=\"text-[#272622] font-medium\">Reality in Motion</p>\r\n              <div className=\"relative h-[2px] w-6 bg-[#cbc7c6]\">\r\n                <motion.div\r\n                  initial={{ width: \"45%\" }}\r\n                  animate={{ width: \"50%\", transition: { duration: 12 } }}\r\n                  className=\"absolute top-0 left-0 h-full bg-[#7a787a]\"\r\n                />\r\n              </div>\r\n              <p className=\"text-[#272622]\">\r\n                <span className=\"text-[#272622]\">\r\n                  1:\r\n                  <NumberFlow value={time} />\r\n                </span>\r\n                <span className=\"px-[0.3ch] text-[#a5a3a1]\">/</span>\r\n                <span className=\"text-[#a5a3a1]\">4:12</span>\r\n              </p>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </MotionConfig>\r\n    </Context.Provider>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/cd-demo.tsx"
    }
  ]
}