{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "action-search-input-demo",
  "type": "registry:component",
  "description": "Search input that show command menu when focused.",
  "title": "Action Search Input",
  "dependencies": [
    "clsx",
    "lucide-react",
    "motion",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/action-search-input-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport useDebounce from \"@/hooks/use-debounce\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  AudioLines,\r\n  BarChart2,\r\n  Globe,\r\n  InfinityIcon,\r\n  Search,\r\n  Send,\r\n  Video,\r\n} from \"lucide-react\";\r\nimport { AnimatePresence, motion } from \"motion/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface Action {\r\n  id: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  description?: string;\r\n  short?: string;\r\n  end?: string;\r\n}\r\n\r\ninterface SearchResult {\r\n  actions: Action[];\r\n}\r\n\r\nconst allActions = [\r\n  {\r\n    id: \"1\",\r\n    label: \"Agent\",\r\n    icon: <InfinityIcon className=\"h-4 w-4 text-blue-500\" />,\r\n    description: \"Deepseek-v3\",\r\n    short: \"⌘K\",\r\n    end: \"Agent\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"Summarize\",\r\n    icon: <BarChart2 className=\"h-4 w-4 text-orange-500\" />,\r\n    description: \"gpt-4o\",\r\n    short: \"⌘cmd+p\",\r\n    end: \"Command\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    label: \"Screen Studio\",\r\n    icon: <Video className=\"h-4 w-4 text-purple-500\" />,\r\n    description: \"gpt-4o\",\r\n    short: \"\",\r\n    end: \"Application\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    label: \"Code Voice\",\r\n    icon: <AudioLines className=\"h-4 w-4 text-green-500\" />,\r\n    description: \"claude 3.7-sonnet\",\r\n    short: \"\",\r\n    end: \"Command\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    label: \"Translate\",\r\n    icon: <Globe className=\"h-4 w-4 text-blue-500\" />,\r\n    description: \"gpt-4o\",\r\n    short: \"\",\r\n    end: \"Command\",\r\n  },\r\n];\r\n\r\nfunction ActionSearchInput({ actions = allActions }: { actions?: Action[] }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState<SearchResult | null>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [selectedAction, setSelectedAction] = useState<Action | null>(null);\r\n  const debouncedQuery = useDebounce(query, 200);\r\n\r\n  useEffect(() => {\r\n    if (!isFocused) {\r\n      setResult(null);\r\n      return;\r\n    }\r\n\r\n    if (!debouncedQuery) {\r\n      setResult({ actions: allActions });\r\n      return;\r\n    }\r\n\r\n    const normalizedQuery = debouncedQuery.toLowerCase().trim();\r\n    const filteredActions = allActions.filter((action) => {\r\n      const searchableText = action.label.toLowerCase();\r\n      return searchableText.includes(normalizedQuery);\r\n    });\r\n\r\n    setResult({ actions: filteredActions });\r\n  }, [debouncedQuery, isFocused]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(e.target.value);\r\n    setIsTyping(true);\r\n  };\r\n\r\n  const container = {\r\n    hidden: { opacity: 0, height: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      height: \"auto\",\r\n      transition: {\r\n        height: {\r\n          duration: 0.4,\r\n        },\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      height: 0,\r\n      transition: {\r\n        height: {\r\n          duration: 0.3,\r\n        },\r\n        opacity: {\r\n          duration: 0.2,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const item = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    show: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n      },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      y: -10,\r\n      transition: {\r\n        duration: 0.2,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Reset selectedAction when focusing the input\r\n  const handleFocus = () => {\r\n    setSelectedAction(null);\r\n    setIsFocused(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto w-full max-w-xl\">\r\n      <div className=\"relative mx-5 flex min-h-[280px] flex-col items-center justify-start\">\r\n        <div className=\"sticky top-0 z-10 w-full max-w-sm bg-background pb-1\">\r\n          <div className=\"relative\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"How can I help you today?\"\r\n              value={query}\r\n              onChange={handleInputChange}\r\n              onFocus={handleFocus}\r\n              onBlur={() => setTimeout(() => setIsFocused(false), 200)}\r\n              className=\"h-9 rounded-lg py-1.5 pr-9 pl-3 text-sm focus-visible:ring-offset-0\"\r\n            />\r\n            <div className=\"-translate-y-1/2 absolute top-1/2 right-3 h-4 w-4\">\r\n              <AnimatePresence mode=\"popLayout\">\r\n                {query.length > 0 ? (\r\n                  <motion.div\r\n                    key=\"send\"\r\n                    initial={{ y: -20, opacity: 0 }}\r\n                    animate={{ y: 0, opacity: 1 }}\r\n                    exit={{ y: 20, opacity: 0 }}\r\n                    transition={{ duration: 0.2 }}\r\n                  >\r\n                    <Send className=\"h-4 w-4 text-gray-400 dark:text-gray-500\" />\r\n                  </motion.div>\r\n                ) : (\r\n                  <motion.div\r\n                    key=\"search\"\r\n                    initial={{ y: -20, opacity: 0 }}\r\n                    animate={{ y: 0, opacity: 1 }}\r\n                    exit={{ y: 20, opacity: 0 }}\r\n                    transition={{ duration: 0.2 }}\r\n                  >\r\n                    <Search className=\"h-4 w-4 text-gray-400 dark:text-gray-500\" />\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full max-w-sm\">\r\n          <AnimatePresence>\r\n            {isFocused && result && !selectedAction && (\r\n              <motion.div\r\n                className=\"mt-1 w-full overflow-hidden rounded-md border bg-white shadow-xs dark:border-zinc-800 dark:bg-zinc-900\"\r\n                variants={container}\r\n                initial=\"hidden\"\r\n                animate=\"show\"\r\n                exit=\"exit\"\r\n              >\r\n                <motion.ul>\r\n                  {result.actions.map((action) => (\r\n                    <motion.li\r\n                      key={action.id}\r\n                      className=\"flex cursor-pointer items-center justify-between rounded-md px-3 py-2 hover:bg-gray-100 dark:hover:bg-zinc-800\"\r\n                      variants={item}\r\n                      layout\r\n                      onClick={() => setSelectedAction(action)}\r\n                    >\r\n                      <div className=\"flex items-center justify-between gap-2\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"text-gray-500\">{action.icon}</span>\r\n                          <span className=\"font-medium text-gray-900 text-sm dark:text-gray-100\">\r\n                            {action.label}\r\n                          </span>\r\n                          <span className=\"text-gray-400 text-xs\">\r\n                            {action.description}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <span className=\"text-gray-400 text-xs\">\r\n                          {action.short}\r\n                        </span>\r\n                        <span className=\"text-right text-gray-400 text-xs\">\r\n                          {action.end}\r\n                        </span>\r\n                      </div>\r\n                    </motion.li>\r\n                  ))}\r\n                </motion.ul>\r\n                <div className=\"mt-2 border-gray-100 border-t px-3 py-2 dark:border-gray-800\">\r\n                  <div className=\"flex items-center justify-between text-gray-500 text-xs\">\r\n                    <span>Press ⌘K to open commands</span>\r\n                    <span>ESC to cancel</span>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionSearchInput;\r\n",
      "path": "registry/components/action-search-input-demo.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/lib/utils.ts"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-debounce.ts",
      "content": "import { useEffect, useState } from \"react\";\n\nfunction useDebounce<T>(value: T, delay = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n",
      "path": "registry/hooks/use-debounce.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/input.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport * as React from \"react\";\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-lg border border-input bg-background px-3 py-2 text-foreground text-sm shadow-black/5 shadow-sm transition-shadow placeholder:text-muted-foreground/70 focus-visible:border-ring focus-visible:outline-none focus-visible:ring-[3px] focus-visible:ring-ring/20 disabled:cursor-not-allowed disabled:opacity-50\",\n          type === \"search\" &&\n            \"[&::-webkit-search-cancel-button]:appearance-none [&::-webkit-search-decoration]:appearance-none [&::-webkit-search-results-button]:appearance-none [&::-webkit-search-results-decoration]:appearance-none\",\n          type === \"file\" &&\n            \"p-0 pr-3 text-muted-foreground/70 italic file:me-3 file:h-full file:border-0 file:border-input file:border-r file:border-solid file:bg-transparent file:px-3 file:font-medium file:text-foreground file:text-sm file:not-italic\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n",
      "path": "registry/ui/input.tsx"
    }
  ],
  "categories": [
    "motion",
    "react",
    "tailwindcss"
  ]
}
