{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-tabs-demo",
  "type": "registry:component",
  "title": "Expandable Tabs",
  "description": "Expandable tabs component.",
  "dependencies": [
    "motion",
    "react",
    "usehooks-ts"
  ],
  "files": [
    {
      "path": "registry/components/expandable-tabs-demo.tsx",
      "content": "\"use client\";\n\nimport { Bell, HelpCircle, Home, Settings, Shield } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { type JSX, useRef, useState } from \"react\";\nimport { useOnClickOutside } from \"usehooks-ts\";\n\ninterface Tab {\n  title: string;\n  icon: JSX.Element;\n  type?: never;\n}\n\ninterface Separator {\n  type: \"separator\";\n  title?: never;\n  icon?: never;\n}\n\ntype TabItem = Tab | Separator;\n\nexport default function ExpandableTabs() {\n  const [selected, setSelected] = useState<number | null>(null);\n  // Fix: Initialize ref with HTMLDivElement type\n  const outsideClickRef = useRef<HTMLDivElement>(null!);\n\n  useOnClickOutside(outsideClickRef, () => setSelected(null));\n\n  const tabs: TabItem[] = [\n    { title: \"Dashboard\", icon: <Home size={16} /> },\n    { title: \"Notifications\", icon: <Bell size={16} /> },\n    { type: \"separator\" },\n    { title: \"Settings\", icon: <Settings size={16} /> },\n    { title: \"Support\", icon: <HelpCircle size={16} /> },\n    { title: \"Security\", icon: <Shield size={16} /> },\n  ];\n\n  const buttonVariants = {\n    initial: {\n      gap: 0,\n      paddingLeft: \".5rem\",\n      paddingRight: \".5rem\",\n    },\n    animate: (isSelected: boolean) => ({\n      gap: isSelected ? \".5rem\" : 0,\n      paddingLeft: isSelected ? \"1rem\" : \".5rem\",\n      paddingRight: isSelected ? \"1rem\" : \".5rem\",\n    }),\n  };\n\n  const spanVariants = {\n    initial: { width: 0, opacity: 0 },\n    animate: { width: \"auto\", opacity: 1 },\n    exit: { width: 0, opacity: 0 },\n  };\n\n  const transition = { delay: 0.1, type: \"spring\", bounce: 0, duration: 0.6 };\n\n  const Separator = () => (\n    <div className=\"mx-1 h-[24px] w-[1.2px] bg-[#555555]\" aria-hidden=\"true\" />\n  );\n\n  return (\n    <div className=\"mx-auto flex items-center justify-center\">\n      <div\n        ref={outsideClickRef}\n        className=\"flex flex-wrap items-center gap-2 rounded-2xl border border-neutral-800 bg-neutral-900 p-1 shadow-[0_6px_24px_rgba(34,42,53,0.12),0_0_0_1px_rgba(34,42,53,0.05),0_4px_8px_rgba(34,42,53,0.08),0_1px_1px_rgba(34,42,53,0.10)]\"\n      >\n        {tabs.map((tab, index) => {\n          if (tab.type === \"separator\") {\n            return <Separator key={`separator-${index}`} />;\n          }\n          return (\n            <motion.button\n              key={tab.title}\n              variants={buttonVariants}\n              initial={false}\n              animate=\"animate\"\n              custom={selected === index}\n              onClick={() => setSelected(index)}\n              transition={transition}\n              className={`${\n                selected === index\n                  ? \"bg-neutral-800 text-opacity-100 [&]:text-blue-500\"\n                  : \"hover:bg-neutral-800\"\n              } relative flex items-center rounded-xl px-4 py-2 font-medium text-white text-xs transition-colors duration-300`}\n            >\n              {tab.icon}\n              <AnimatePresence initial={false}>\n                {selected === index && (\n                  <motion.span\n                    variants={spanVariants}\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    transition={transition}\n                    className=\"overflow-hidden\"\n                  >\n                    {tab.title}\n                  </motion.span>\n                )}\n              </AnimatePresence>\n            </motion.button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/expandable-tabs-demo.tsx"
    }
  ]
}