{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-loop",
  "type": "registry:component",
  "title": "Text Loop",
  "description": "text loop base",
  "dependencies": [
    "clsx",
    "motion",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "registry/ui/text-loop.tsx",
      "content": "\"use client\";\nimport {\n  AnimatePresence,\n  motion,\n  type Transition,\n  type Variants,\n} from \"motion/react\";\nimport { Children, useEffect, useState } from \"react\";\nimport { cn } from \"@/registry/lib/utils\";\n\nexport type TextLoopProps = {\n  children: React.ReactNode[];\n  className?: string;\n  interval?: number;\n  transition?: Transition;\n  variants?: Variants;\n  onIndexChange?: (index: number) => void;\n};\n\nexport default function TextLoop({\n  children,\n  className,\n  interval = 2,\n  transition = { duration: 0.3 },\n  variants,\n  onIndexChange,\n}: TextLoopProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const items = Children.toArray(children);\n\n  useEffect(() => {\n    const intervalMs = interval * 1000;\n\n    const timer = setInterval(() => {\n      setCurrentIndex((current) => {\n        const next = (current + 1) % items.length;\n        onIndexChange?.(next);\n        return next;\n      });\n    }, intervalMs);\n    return () => clearInterval(timer);\n  }, [items.length, interval, onIndexChange]);\n\n  const motionVariants: Variants = {\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -20 },\n    initial: { opacity: 0, y: 20 },\n  };\n\n  return (\n    <div className={cn(\"relative inline-block whitespace-nowrap\", className)}>\n      <AnimatePresence initial={false} mode=\"popLayout\">\n        <motion.div\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          key={currentIndex}\n          transition={transition}\n          variants={variants || motionVariants}\n        >\n          {items[currentIndex]}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ui/text-loop.tsx"
    }
  ],
  "categories": [
    "motion",
    "react",
    "tailwindcss"
  ]
}